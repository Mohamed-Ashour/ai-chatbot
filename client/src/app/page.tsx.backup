'use client'

import { useState } from 'react'
import { Toaster } from 'react-hot-toast'
import { Settings, LogOut } from 'lucide-react'
import { motion } from 'framer-motion'

import { useChat } from '@/hooks/useChat'
import { MessageList } from '@/components/MessageList'
import { MessageInput } from '@/components/MessageInput'
import { ConnectionStatus } from '@/components/ConnectionStatus'
import { WelcomeModal } from '@/components/WelcomeModal'

export default function ChatPage() {
  const [userName, setUserName] = useState<string | null>(null)
  const { messages, connectionStatus, sendMessage, isTyping, connect, disconnect } = useChat()

  const handleConnect = async (name: string) => {
    setUserName(name)
    await connect(name)
  }

  const handleDisconnect = () => {
    disconnect()
    setUserName(null)
  }

  const isConnected = connectionStatus === 'connected'
  const showWelcome = !userName || connectionStatus === 'disconnected'

  return (
    <div className="flex flex-col h-screen bg-gradient-to-br from-indigo-50 via-white to-cyan-50 overflow-hidden">
      {/* Animated background elements */}
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <div className="absolute top-1/4 -left-4 w-72 h-72 bg-gradient-to-r from-purple-300 to-pink-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob" />
        <div className="absolute top-1/3 -right-4 w-72 h-72 bg-gradient-to-r from-yellow-300 to-pink-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-2000" />
        <div className="absolute -bottom-8 left-20 w-72 h-72 bg-gradient-to-r from-pink-300 to-indigo-300 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-blob animation-delay-4000" />
      </div>
      
      {/* Header */}
      <motion.header
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        className="relative z-10 flex items-center justify-between p-4 bg-white/90 backdrop-blur-md border-b border-white/20 shadow-lg shadow-gray-100/50"
      >
        <div className="flex items-center gap-4">
          <motion.div
            whileHover={{ rotate: 360, scale: 1.1 }}
            whileTap={{ scale: 0.95 }}
            transition={{ duration: 0.5, type: "spring" }}
            className="w-12 h-12 bg-gradient-to-br from-indigo-500 via-purple-500 to-pink-500 rounded-2xl flex items-center justify-center shadow-lg shadow-purple-200/50"
          >
            <span className="text-white font-bold text-lg drop-shadow-sm">AI</span>
          </motion.div>
          <div>
            <h1 className="text-xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent">
              AI Chatbot
            </h1>
            {userName && (
              <motion.p
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                className="text-sm text-gray-600 font-medium"
              >
                Welcome back, <span className="text-indigo-600 font-semibold">{userName}</span>
              </motion.p>
            )}
          </div>
        </div>

        <div className="flex items-center gap-3">
          <ConnectionStatus status={connectionStatus} />
          
          {isConnected && (
            <div className="flex items-center gap-3">
              <motion.button
                whileHover={{ scale: 1.05, y: -1 }}
                whileTap={{ scale: 0.95 }}
                className="p-3 text-gray-500 hover:text-indigo-600 hover:bg-indigo-50 rounded-xl transition-all duration-200 shadow-sm hover:shadow-md"
              >
                <Settings size={20} />
              </motion.button>
              
              <motion.button
                whileHover={{ scale: 1.05, y: -1 }}
                whileTap={{ scale: 0.95 }}
                onClick={handleDisconnect}
                className="p-3 text-gray-500 hover:text-red-500 hover:bg-red-50 rounded-xl transition-all duration-200 shadow-sm hover:shadow-md"
              >
                <LogOut size={20} />
              </motion.button>
            </div>
          )}
        </div>
      </motion.header>

      {/* Chat Container */}
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.2 }}
        className="relative z-10 flex-1 flex flex-col min-h-0 bg-white/60 backdrop-blur-sm"
      >
        {isConnected ? (
          <>
            <MessageList messages={messages} isTyping={isTyping} />
            <MessageInput
              onSendMessage={sendMessage}
              disabled={!isConnected}
              placeholder={isConnected ? "Type your message..." : "Connect to start chatting"}
            />
          </>
        ) : (
          <div className="flex-1 flex items-center justify-center p-8">
            <div className="text-center max-w-lg">
              <motion.div
                animate={{ 
                  y: [0, -12, 0],
                  rotate: [0, 5, -5, 0]
                }}
                transition={{ 
                  duration: 4, 
                  repeat: Infinity,
                  ease: "easeInOut"
                }}
                className="w-24 h-24 bg-gradient-to-br from-indigo-500 via-purple-500 to-pink-500 rounded-3xl flex items-center justify-center mx-auto mb-8 shadow-2xl shadow-purple-300/50"
              >
                <span className="text-white font-bold text-2xl drop-shadow-md">AI</span>
              </motion.div>
              
              <motion.h2
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.3 }}
                className="text-4xl font-bold bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-600 bg-clip-text text-transparent mb-4"
              >
                Ready to Chat?
              </motion.h2>
              
              <motion.p
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.5 }}
                className="text-lg text-gray-600 mb-10 leading-relaxed"
              >
                Connect to start a conversation with our intelligent AI assistant.
                Experience the future of conversational AI.
              </motion.p>
              
              <motion.button
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.7 }}
                whileHover={{ 
                  scale: 1.05,
                  boxShadow: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)"
                }}
                whileTap={{ scale: 0.95 }}
                onClick={() => setUserName('')}
                className="px-10 py-4 bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700 text-white font-semibold rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 text-lg"
              >
                Get Started
              </motion.button>
            </div>
          </div>
        )}
      </motion.div>

      {/* Welcome Modal */}
      <WelcomeModal
        isOpen={showWelcome && userName === ''}
        onConnect={handleConnect}
        isConnecting={connectionStatus === 'connecting'}
      />

      {/* Toast Notifications */}
      <Toaster
        position="top-right"
        toastOptions={{
          duration: 4000,
          className: 'bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100',
        }}
      />
    </div>
  )
}
